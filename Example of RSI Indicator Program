from pandas_datareader import data as web
from mpl_finance import candlestick_ohlc
from matplotlib import pyplot as plt
from matplotlib import style
 
import matplotlib.dates as mdates
import fix_yahoo_finance as yf
import datetime as dt
import pandas as pd
import numpy as np
import time
 
style.use('dark_background')
 
yf.pdr_override()
 
fig = plt.figure()
ax1 = fig.add_subplot(111)
 
stock = "2330"
 
Analysis = '/users/Desktop/Csvfile/stockdata.csv'
 
start = dt.datetime(2017, 8, 30)
end = dt.datetime.now()
 
df = web.get_data_yahoo([str(stock) + '.TW'], start, end)
df.to_csv(Analysis)
 
time.sleep(2)
 
data = pd.read_csv(Analysis, parse_dates=True, index_col='Date')
data.head()
 
close = data["Close"]
 
top = plt.subplot2grid((12, 9), (0, 0), rowspan=9, colspan=9)
bottom = plt.subplot2grid((12, 9), (10, 0), rowspan=2, colspan=9, sharex=top)
 
 
def rsi(price, period=6):
    import pandas as pd
 
    closedif = (price - price.shift(1)).dropna()
 
    upprc = pd.Series(0, index=closedif.index)
    upprc[closedif > 0] = closedif[closedif > 0]
 
    downprc = pd.Series(0, index=closedif.index)
    downprc[closedif < 0] =- closedif[closedif < 0]
 
    rsi = []
 
    for i in range(period,len(upprc)+1):
        up_mean = np.mean(upprc.values[(i-period):i], dtype=np.float32)
        up_down = np.mean(downprc.values[(i-period):i], dtype=np.float32)
        rsi.append(100*up_mean/(up_mean + up_down))
 
    rsi = pd.Series(rsi, index=closedif.index[(period-1):])
 
    return(rsi)
 
rsi12 = rsi(close,20)
rsi12.tail()
 
rsi6 = rsi(close,10)
rsi6.tail()
 
moving_avg = close.rolling(5).mean()
moving_avg20 = close.rolling(20).mean()
 
data = data.reset_index()
data['Date'] = data['Date'].apply(lambda d: mdates.date2num(d.to_pydatetime()))
candlestick = [tuple(x) for x in data[['Date','Open','High','Low','Close']].values]
candlestick_ohlc(top, candlestick, width=0.7,colorup='r',colordown='green',alpha=0.8)
 
top.plot(moving_avg, color='b', linewidth=1, alpha=0.7, label='MA5')
top.plot(moving_avg20, color='r', linewidth=1, alpha=0.7, label='MA20')
 
top.grid(which='both', alpha=0.3)
 
bottom.plot(rsi12, color='orange', linewidth=1, alpha=0.7)
bottom.plot(rsi6, color='blue', linewidth=1, alpha=0.7)
 
bottom.axhline(70, color='r', alpha=0.3)
bottom.axhline(30, color='b', alpha=0.3)
bottom.set_ylim(-10, 110)
 
plt.show()
